<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Mahdi Sadjadi</title>
    <link>http://mahdisadjadi.github.io/project/</link>
    <description>Recent content in Projects on Mahdi Sadjadi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Mahdi Sadjadi</copyright>
    <lastBuildDate>Thu, 12 Apr 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/project/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SQL for data science and analytics</title>
      <link>http://mahdisadjadi.github.io/project/sql/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mahdisadjadi.github.io/project/sql/</guid>
      <description>

&lt;p&gt;Data scientists are supposed to look into data, extract patterns and trends and
then make actionable recommendation based on their observations. A very common
tool to access to data efficiently is SQL. The followings are a selection of SQL
questions I solved during preparing for interview for data science positions.&lt;/p&gt;

&lt;p&gt;Here are a few suggestion to get better at SQL:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not trust answers here. Actively look for different ways of doing the same thing.&lt;/li&gt;
&lt;li&gt;Try to develop an intuition about using what strategy and when.&lt;/li&gt;
&lt;li&gt;Think about what type of data the company has access to. Make those tables
for yourself (use &lt;a href=&#34;http://sqlfiddle.com/&#34;&gt;sqlfiddle&lt;/a&gt;) and solve the questions you can think of. This not only strengthen
your expertise in SQL but also make you familiar with the type of analytics you
will need in that job.&lt;/li&gt;
&lt;li&gt;Not all functionality is available everywhere.(MySQL vs SQLite)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;q1&#34;&gt;Q1&lt;/h2&gt;

&lt;p&gt;You have a table called logins with the following structure that logs when
someone has logged into an application.
Write a query to identify user ids  that have logged in for 7 consecutive days.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Timestamp| user_id
1/1/2018 12pm | 1
1/1/2018 3pm  | 1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT ROW_NUMBER() OVER (ORDER BY date PARTITION BY user_id)
FROM  (SELECT date_logins.user_id,
               date_logins.date
        FROM
             (SELECT DATE(Timestamp) AS date,
                     user_id    
                FROM logins) date_logins
        GROUP BY date_logins.user_id) user_table
&lt;/code&gt;&lt;/pre&gt;


&lt;figure &gt;
    &lt;a href=&#34;http://www.newdesignfile.com/post_honeycomb-texture-psd-free_202486/&#34;&gt;
        &lt;img src=&#34;http://mahdisadjadi.github.io/img/projects_cellmaterials_01.jpg&#34; /&gt;
    &lt;/a&gt;
    
    &lt;figcaption&gt;
        &lt;h4&gt;Honeycomb, a cellular material&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;$$
m(n) = A+\frac{B}{n}
$$&lt;/p&gt;

&lt;h2 id=&#34;q2-spotify&#34;&gt;Q2 Spotify&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sm (uid, sid, t)
uid | sid| ts
1   | A  | t
1   | A  | t+2
1   | B  | t+20
1   | C  | t+120
2   | A  | t1
2   | B  | t1+20
3   | D  | t2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create the table:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE mytable(
  day    DATE  NOT NULL
  ,song    VARCHAR(12) NOT NULL
);
INSERT INTO mytable(day,song) VALUES (&#39;2017-9-30&#39;,&#39;song1&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-9-10&#39;,&#39;song1&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-12&#39;,&#39;song4&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-9-01&#39;,&#39;song4&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-12&#39;,&#39;song2&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-09-12&#39;,&#39;song3&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-12&#39;,&#39;song2&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-12&#39;,&#39;song3&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-12&#39;,&#39;song2&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-12&#39;,&#39;song4&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-22&#39;,&#39;song4&#39;);
INSERT INTO mytable(day,song) VALUES (&#39;2017-3-22&#39;,&#39;song2&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;what-s-the-top-played-song&#34;&gt;What&amp;rsquo;s the top played song?&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-SQL&#34;&gt;SELECT sid
FROM sm
GROUP BY sid
HAVING COUNT(*) = (SELECT COUNT(*)
                     FROM sm
                    GROUP BY sid
                  )

SELECT sm.sid,
       COUNT(sm.uid) AS cnt_s,
      (SELECT MAX(t1.cnt)
       FROM (SELECT COUNT(uid) AS cnt
       FROM sm
       GROUP BY sid) t1) AS max_played
FROM sm
GROUP BY sid
HAVING cnt_s = max_played;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;how-many-users-listened-to-more-than-2-unique-songs&#34;&gt;How many users listened to more than 2 unique songs.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT COUNT(*)
FROM (SELECT sm.id,
      FROM sm
      GROUP BY sm.uid
      HAVING COUNT(DISTINCT sm.sid) &amp;gt;= 2);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;q3-social-media&#34;&gt;Q3: Social media&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE mytable(
   req_id INT,
   rev_id INT,
   day INT,
   status  VARCHAR(12) NOT NULL
);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;1&#39;,&#39;2&#39;,&#39;2014&#39;,&#39;sent&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;1&#39;,&#39;2&#39;,&#39;2014&#39;,&#39;accept&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;2&#39;,&#39;3&#39;,&#39;2014&#39;,&#39;sent&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;2&#39;,&#39;3&#39;,&#39;2014&#39;,&#39;reject&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;1&#39;,&#39;4&#39;,&#39;2014&#39;,&#39;sent&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;1&#39;,&#39;5&#39;,&#39;2014&#39;,&#39;sent&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;1&#39;,&#39;5&#39;,&#39;2014&#39;,&#39;&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;2&#39;,&#39;5&#39;,&#39;2014&#39;,&#39;sent&#39;);
INSERT INTO mytable(req_id, rev_id, day, status) VALUES (&#39;2&#39;,&#39;5&#39;,&#39;2014&#39;,&#39;accept&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;q4-median&#34;&gt;Q4: MEdian&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE grades(
  grade INT NOT NULL
);
INSERT INTO grades(grade) VALUES (1);
INSERT INTO grades(grade) VALUES (2);
INSERT INTO grades(grade) VALUES (4);
INSERT INTO grades(grade) VALUES (4);
INSERT INTO grades(grade) VALUES (3);
INSERT INTO grades(grade) VALUES (2);
INSERT INTO grades(grade) VALUES (3);
INSERT INTO grades(grade) VALUES (2);
INSERT INTO grades(grade) VALUES (4);
INSERT INTO grades(grade) VALUES (4);
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SET @rowindex = 0;

SELECT ind, grade
FROM
    (SELECT @rowindex := @rowindex + 1 AS ind,
           grade
    FROM grades
    ORDER BY grade) t
WHERE ind IN (FLOOR(@rowindex/2), CEIL(@rowindex/2))
;   
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ArxivScraper: A python module based on arxiv.org API</title>
      <link>http://mahdisadjadi.github.io/project/arxiv_scraper/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://mahdisadjadi.github.io/project/arxiv_scraper/</guid>
      <description>&lt;p&gt;Arxiv.org is a repository for scientific preprints in various fields of
study. Visiting the website daily to find the latest papers is a routine for
many researchers. However, Arxiv receives thousands of monthly submissions and
researchers often have to browse tens of papers to find preprints relevant to
their research.&lt;/p&gt;

&lt;p&gt;Arxivscraper is a python module written to simplify the access to
related papers in a given area. The user can pass a category and a date range
to receive all papers submitted or updated during that range. The user has also
the option to filter those papers based on their author, subcategory, title and
abstract. For more information on how to install and use the module, see its
GitHub repository:&lt;/p&gt;

&lt;p&gt;Repository: &lt;a href=&#34;https://github.com/mahdisadjadi/arxivscraper&#34;&gt;https://github.com/mahdisadjadi/arxivscraper&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Phoenix crime analysis</title>
      <link>http://mahdisadjadi.github.io/project/phoenix_crimes/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://mahdisadjadi.github.io/project/phoenix_crimes/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;https://github.com/Mahdisadjadi/phoenixcrime/raw/master/heatmap.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;weekly crime trend&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Analysis of crime data is not only important to prevent criminal acts and to
provide a safer environment, it contains rich interesting patterns related to
the local community, geography and culture.&lt;/p&gt;

&lt;p&gt;The city of Phoenix has published such data since November 2015. In this project,
I look at the crimes trend in Phoenix, AZ. The weekly and monthly trends
of various crime types are studied. I also provide a D3 visualization of
weekly trends for all crime types. In addition, safer zip codes are determined.&lt;/p&gt;

&lt;p&gt;A Bernoulli Naive Bayes classifier is trained on data to predict the type of
a crime given its location and time.&lt;/p&gt;

&lt;p&gt;Repository: &lt;a href=&#34;https://github.com/Mahdisadjadi/phoenixcrime&#34;&gt;https://github.com/Mahdisadjadi/phoenixcrime&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Webpage: &lt;a href=&#34;http://mahdisadjadi.com/phoenixcrime/&#34;&gt;http://mahdisadjadi.com/phoenixcrime/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pipeline incidents in the US</title>
      <link>http://mahdisadjadi.github.io/project/oil_pipelines/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://mahdisadjadi.github.io/project/oil_pipelines/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://mahdisadjadi.github.io/img/20161203_pipeline_output_29_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Repository: &lt;a href=&#34;https://github.com/Mahdisadjadi/pipeline-incidents&#34;&gt;https://github.com/Mahdisadjadi/pipeline-incidents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Report (blog post): &lt;a href=&#34;http://mahdisadjadi.com/blog/20161203_pipeline/&#34;&gt;http://mahdisadjadi.com/blog/20161203_pipeline/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cellular materials</title>
      <link>http://mahdisadjadi.github.io/project/cellular_materials/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://mahdisadjadi.github.io/project/cellular_materials/</guid>
      <description>&lt;p&gt;You can barely find someone not amazed by honeycombs: a packing of seemingly
perfect hexagons. Honeycomb is a cellular network. In fact,
they are many similar structures in nature resembling the honeycomb. Although,
most naturally occurring cellular networks are not as ordered as honeycomb. But
it&amp;rsquo;s not hard to notice in the image (top left corner), even in honeycomb
there are a few cells with 5 neighbors instead of 6.&lt;/p&gt;


&lt;figure &gt;
    &lt;a href=&#34;http://www.newdesignfile.com/post_honeycomb-texture-psd-free_202486/&#34;&gt;
        &lt;img src=&#34;http://mahdisadjadi.github.io/img/projects_cellmaterials_01.jpg&#34; /&gt;
    &lt;/a&gt;
    
    &lt;figcaption&gt;
        &lt;h4&gt;Honeycomb, a cellular material&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Partitioning any surface or volume into closed
cells results in a &amp;ldquo;cellular network&amp;rdquo;.
Examples are soap foam, grains, biological tissues, crack networks, ecological
territories, and Voronoi tessellations. It is amazing how very distinct processes
lead to cellular networks which are topologically the same. The following image
shows bubbles as a cellular network where an interface separates order-disorder phases.
If you look at the disordered phase carefully, you will notice that large bubbles are
surrounded by small bubbles. This is no accident! This
tendency of smaller and larger rings being adjacent is called &amp;ldquo;Aboav-Weaire&amp;rdquo; law.&lt;/p&gt;


&lt;figure &gt;
    &lt;a href=&#34;https://en.wikipedia.org/wiki/File:Order_and_Chaos.tif&#34;&gt;
        &lt;img src=&#34;http://mahdisadjadi.github.io/img/projects_cellmaterials_02.jpg&#34; /&gt;
    &lt;/a&gt;
    
    &lt;figcaption&gt;
        &lt;h4&gt;A foam with interface order-disorder&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;According to the law, average size of cells $m(n)$ around a cell with $n$ sides is:&lt;/p&gt;

&lt;p&gt;$$
m(n) = A+\frac{B}{n}
$$&lt;/p&gt;

&lt;p&gt;$A$ and $B$ are two constants determined for each specific network. This is not
an exact equation but works very well!&lt;/p&gt;

&lt;p&gt;My interest in cellular networks comes from network glasses. Although in glass science,
they are often called random network instead of cellular network and cells
are called &amp;ldquo;rings&amp;rdquo;. Network glasses are very important networks since they
are microscopic and interactions are vert different from commonly studied random
networks. But the issue is, rings in bulk glasses (which are 3D) are hard to
observe or even define uniquely.&lt;/p&gt;

&lt;p&gt;The breakthrough happened only recently. Researchers have been able to image
a bilayer silica (SiO${}_{2}$) showing, for the very first time, how atoms are arranged to
make the network of polygons creating the ring structure of the glass.
Another example of these thin materials is
amorphous graphene. Although people have studied glasses for years, the issue is
 their structure is disordered (and there are $~10^{23}$ atoms to image!),
so experimental methods used in crystallography (like x-ray) can&amp;rsquo;t determine
the structure uniquely. This leaves a lot of room for &lt;em&gt;scientific&lt;/em&gt; speculations.&lt;/p&gt;

&lt;p&gt;Note how different these materials are, ranging from atomic scale to&lt;/p&gt;

&lt;p&gt;Although my research is mainly concerned with fundamental aspects of cellular
materials but they also have wide applications. These materials are low density
(lightweight) and are suitable to make boats, airplane and our bones.&lt;/p&gt;

&lt;p&gt;[1] Sadjadi M, Thorpe MF. Ring correlations in random networks. Physical Review E. 2016 Dec 9;94(6):062304.
arXiv:&lt;a href=&#34;https://arxiv.org/abs/1607.06568&#34;&gt;1607.06568&lt;/a&gt;; &lt;a href=&#34;https://doi.org/10.1103/PhysRevE.94.062304&#34;&gt;DOI&lt;/a&gt; (2016).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
